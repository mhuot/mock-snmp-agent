[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mock-snmp-agent"
version = "1.0.0"
description = "A comprehensive SNMP simulator with REST API and real-time monitoring for testing and development purposes"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Mock SNMP Agent Contributors"},
]
maintainers = [
    {name = "Mock SNMP Agent Contributors"},
]
keywords = [
    "snmp",
    "simulator",
    "testing",
    "network",
    "monitoring",
    "development",
    "mock",
    "agent"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Networking :: Monitoring",
    "Topic :: System :: Systems Administration",
    "Topic :: Internet",
    "Environment :: Console",
    "Environment :: No Input/Output (Daemon)",
]
requires-python = ">=3.8"
dependencies = [
    "snmpsim-lextudio>=1.1.1",
    "fastapi[all]>=0.100.0",
    "uvicorn[standard]>=0.22.0",
    "websockets>=11.0.0",
    "pyyaml>=6.0",
    "python-multipart>=0.0.5",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pylint>=2.11.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "black>=22.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-html>=3.2.0",
    "pytest-xdist>=3.3.0",
    "httpx>=0.24.0",
    "pytest-mock>=3.11.0",
    "responses>=0.23.0",
    "pytest-benchmark>=4.0.0",
    "factory-boy>=3.3.0",
    "faker>=19.0.0",
    "requests>=2.31.0",
]
api = [
    "fastapi[all]>=0.100.0",
    "uvicorn[standard]>=0.22.0",
    "websockets>=11.0.0",
    "pyyaml>=6.0",
    "python-multipart>=0.0.5",
    "pydantic>=2.0.0",
]
extended = [
    "snmpsim-data>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/mhuot/snmpsim"
Documentation = "https://github.com/mhuot/snmpsim#readme"
Repository = "https://github.com/mhuot/snmpsim.git"
"Bug Tracker" = "https://github.com/mhuot/snmpsim/issues"
Changelog = "https://github.com/mhuot/snmpsim/releases"

[project.scripts]
mock-snmp-agent = "src.mock_snmp_agent:main"
api-test-runner = "scripts.testing.run_api_tests:main"

[tool.setuptools]
py-modules = ["config"]
packages = ["src", "tests", "scripts"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  venv
  | __pycache__
  | \.git
  | \.pytest_cache
  | build
  | dist
)/
'''

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "invalid-name",
]

[tool.pylint.format]
max-line-length = 88

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --tb=short"
testpaths = [
    "tests",
    ".",
]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
timeout = 300

[tool.coverage.run]
source = ["."]
omit = [
    "venv/*",
    "*/venv/*",
    "__pycache__/*",
    "*/site-packages/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
